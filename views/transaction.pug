extends layout

block content
  main(role='main')
    .jumbotron
      .container
        .card
          .card-header
            h3 Transaction
          .card-body
            ul.list-group.list-group-flush
              li.list-group-item Hash: #{transaction.tx_hash}
              li.list-group-item Block: 
                a(href='/block/'+transaction.block_number)= helpers.format(transaction.block_number)
              if transaction.is_coinbase
                li.list-group-item Coinbase Transaction
              li.list-group-item Input Value: #{helpers.format(transaction.input_value / 100000000, 8)} BTC
              li.list-group-item Output Value: #{helpers.format(transaction.output_value / 100000000, 8)} BTC
              li.list-group-item Fee: #{transaction.fee}
    .container
      .row
        .col
          h4 Inputs
          each input in inputs
            .card
              .card-header
                h4= input.input_index
              .card-body
                ul.list-group.list-group-flush
                  li.list-group-item Value: #{helpers.format(input.input_value / 100000000, 8)} BTC
                  li.list-group-item Script: #{helpers.limit(input.script_asm, 32)}
                  li.list-group-item Addresses: #{input.addresses}
            | &nbsp;
        .col
          h4 Outputs
          each output in outputs
            .card
              .card-header
                h4= output.output_index
              .card-body
                ul.list-group.list-group-flush
                  if output.supply_loss
                    li.list-group-item.list-group-item-danger Value: #{helpers.format(output.output_value / 100000000, 8)} BTC
                    li.list-group-item.list-group-item-danger Script: #{helpers.limit(output.script_asm, 32)}
                    li.list-group-item.list-group-item-danger Addresses: #{output.addresses}
                  else
                    li.list-group-item Value: #{helpers.format(output.output_value / 100000000, 8)} BTC
                    li.list-group-item Script: #{output.script_asm}
                    li.list-group-item Addresses: #{output.addresses}
            | &nbsp;
